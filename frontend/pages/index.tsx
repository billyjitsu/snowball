import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import NAV from "../components/Nav";
import Hero from "../components/battle/Intro";
import Fight from "../components/battle/Fight";
import Loading from "../components/Loading"
import { checkWhichNFT, fetchNFT } from "../helpers";
import { useEffect, useState } from "react";
import { useAccount } from "wagmi";
import { useRouter } from "next/navigation";
import dynamic from "next/dynamic";

const Home: NextPage = () => {
  const router = useRouter()
  const { address } = useAccount();
  const [hasNft, setHasNft] = useState<boolean>(false);
  const [loading, setLoading] = useState<boolean>(false);

  useEffect(() => {
    console.log(hasNft)
    if (!address) return;
    console.log("?")
    setLoading(true)
    const fetchData: () => Promise<void> = async () => {
      const mintedData = await fetchNFT(address || undefined);
      setHasNft(!!mintedData);
    };

    fetchData();
    if (!loading && address) {
      router.push(`/arena`)
    }
    setLoading(false)
  }, [address]);

  useEffect(() => {
    if (!loading && address) {
      router.push(`/arena`)
    }
  }, [])

  console.log("LOADING", loading)

  return (
    <div className="min-h-screen font-serif">
      <Head>
        <title>SnowDay</title>
        <meta
          content="Generated by API3"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <div>
        {!address && (
          <p className="text-3xl text-center text-white">Connect Wallet to start</p>
        )
        }
        {loading && (
          <div className="">
            <Loading action="...loading" size="lg" />
          </div>
        )}
      </div>

      {/* <footer className={styles.footer}>
        <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
          Made with ❤️ by your frens at 🌈
        </a>
      </footer> */}
    </div>
  );
};

export default dynamic(() => Promise.resolve(Home), { ssr: false });

